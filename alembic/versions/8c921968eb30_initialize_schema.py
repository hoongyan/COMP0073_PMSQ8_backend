"""initialize_schema

Revision ID: 8c921968eb30
Revises: 
Create Date: 2025-08-20 13:06:11.746246

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision: str = '8c921968eb30'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('person_details',
    sa.Column('person_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('race', sa.String(), nullable=True),
    sa.Column('occupation', sa.String(), nullable=True),
    sa.Column('contact_no', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('blk', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('unit_no', sa.String(), nullable=True),
    sa.Column('postcode', sa.String(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_updated_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('person_id')
    )
    op.create_table('strategies',
    sa.Column('strategy_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('strategy_type', sa.String(), nullable=False),
    sa.Column('response', sa.Text(), nullable=False),
    sa.Column('success_score', sa.Float(), nullable=False),
    sa.Column('user_profile', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('retrieval_count', sa.Integer(), nullable=False),
    sa.Column('creation_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('strategy_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('race', sa.String(), nullable=True),
    sa.Column('contact_no', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('blk', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('unit_no', sa.String(), nullable=True),
    sa.Column('postcode', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'INVESTIGATION OFFICER', 'ANALYST', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'INACTIVE', name='userstatus'), server_default='PENDING', nullable=False),
    sa.Column('permission', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('registration_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_updated_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('scam_reports',
    sa.Column('report_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('scam_incident_date', sa.Date(), nullable=False),
    sa.Column('scam_report_date', sa.Date(), nullable=False),
    sa.Column('scam_type', sa.String(), nullable=True),
    sa.Column('scam_approach_platform', sa.String(), nullable=True),
    sa.Column('scam_communication_platform', sa.String(), nullable=True),
    sa.Column('scam_transaction_type', sa.String(), nullable=True),
    sa.Column('scam_beneficiary_platform', sa.String(), nullable=True),
    sa.Column('scam_beneficiary_identifier', sa.String(), nullable=True),
    sa.Column('scam_contact_no', sa.String(), nullable=True),
    sa.Column('scam_email', sa.String(), nullable=True),
    sa.Column('scam_moniker', sa.String(), nullable=True),
    sa.Column('scam_url_link', sa.String(), nullable=True),
    sa.Column('scam_amount_lost', sa.Float(), nullable=True),
    sa.Column('scam_incident_description', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('UNASSIGNED', 'ASSIGNED', 'RESOLVED', name='reportstatus'), server_default='UNASSIGNED', nullable=False),
    sa.Column('io_in_charge', sa.Integer(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('embedding', Vector(dim=384), nullable=True),
    sa.ForeignKeyConstraint(['io_in_charge'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_table('conversations',
    sa.Column('conversation_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['report_id'], ['scam_reports.report_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('conversation_id')
    )
    op.create_table('report_persons_link',
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('VICTIM', 'SUSPECT', 'WITNESS', 'REPORTEE', name='personrole'), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['person_details.person_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['report_id'], ['scam_reports.report_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('report_id', 'person_id')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('sender_role', sa.Enum('HUMAN', 'AI', name='senderrole'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('sent_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.conversation_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('message_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('messages')
    op.drop_table('report_persons_link')
    op.drop_table('conversations')
    op.drop_table('scam_reports')
    op.drop_table('users')
    op.drop_table('strategies')
    op.drop_table('person_details')
    # ### end Alembic commands ###
